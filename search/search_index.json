{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Offensity Prime This documentation refers to the on premise version of Offensity. Offensity Prime is currently in alpha state. Use it at your own risk. Get started ! Monitor your Microsoft Active Directory (AD) security with Offensity Prime. Offensity Prime... reports insecure group policy objects (GPOs) crawls your SMB shares for sensitive files and vulnerabilities finds vulnerabilities in your PKI like certificate template issues reports users with insecure settings and improper permissions and does a lot more. Get started !","title":"Welcome to Offensity Prime"},{"location":"#welcome-to-offensity-prime","text":"This documentation refers to the on premise version of Offensity. Offensity Prime is currently in alpha state. Use it at your own risk. Get started ! Monitor your Microsoft Active Directory (AD) security with Offensity Prime. Offensity Prime... reports insecure group policy objects (GPOs) crawls your SMB shares for sensitive files and vulnerabilities finds vulnerabilities in your PKI like certificate template issues reports users with insecure settings and improper permissions and does a lot more. Get started !","title":"Welcome to Offensity Prime"},{"location":"architecture/","text":"Introduction The bootstrap container is started with docker-compose (see docker-compose.yml ). The bootstrap container then starts all services required to run offensity as separate docker containers and performs migrations. These service containers are managed by the bootstrap container, not by docker-compose. The scans are performed by the Offensity runner, which runs scanmodules. Each scanmodule runs in it's own separate docker container. The bootstrap container regularly checks for updates in the background. When updates are available, the new version is downloaded and applied. During the update process, all services are restarted and migrations are performed. This results in a short downtime. During updates no scans are cancelled and no scandata is lost. Network Access All docker containers run in a separate docker network ( offensity-net ). Only the reporting web interface is published to 127.0.0.1:8080. When the Offensity web interface should be accessible from other hosts over the network, a reverse proxy should be configured in front of it. Configuration During the first run, a settings.yml file is created in the same directory as the docker-compose.yml file, which contains initial configurations for all services. Everything should be able to run without further configurations. Nevertheless, settings.yml can be edited manually to modify service configurations. Changes in settings will not be overwritten, but updates might introduce additional settings and write to that file. Note that, when settings.yml is updated, comments will be stripped.","title":"Architecture"},{"location":"architecture/#introduction","text":"The bootstrap container is started with docker-compose (see docker-compose.yml ). The bootstrap container then starts all services required to run offensity as separate docker containers and performs migrations. These service containers are managed by the bootstrap container, not by docker-compose. The scans are performed by the Offensity runner, which runs scanmodules. Each scanmodule runs in it's own separate docker container. The bootstrap container regularly checks for updates in the background. When updates are available, the new version is downloaded and applied. During the update process, all services are restarted and migrations are performed. This results in a short downtime. During updates no scans are cancelled and no scandata is lost.","title":"Introduction"},{"location":"architecture/#network-access","text":"All docker containers run in a separate docker network ( offensity-net ). Only the reporting web interface is published to 127.0.0.1:8080. When the Offensity web interface should be accessible from other hosts over the network, a reverse proxy should be configured in front of it.","title":"Network Access"},{"location":"architecture/#configuration","text":"During the first run, a settings.yml file is created in the same directory as the docker-compose.yml file, which contains initial configurations for all services. Everything should be able to run without further configurations. Nevertheless, settings.yml can be edited manually to modify service configurations. Changes in settings will not be overwritten, but updates might introduce additional settings and write to that file. Note that, when settings.yml is updated, comments will be stripped.","title":"Configuration"},{"location":"getting_started/","text":"Getting Started System Requirements Ubuntu 16G RAM 4 CPU cores 300G SSD Internet access docker 20.10.0 or above (see Install Docker Engine ) docker-compose (see Install Docker Compose ) Download and Setup curl https://sos-at-vie-1.exo.io/source-code/offensity-prime.zip --create-dirs -o ./prime/offensity-prime.zip cd prime docker-compose up -d --build The software is provided under this license . Multiple docker images will be downloaded during the setup process. It might take some time until the setup is finished (mainly depending on your internet connection). Check the setup status using docker logs prime_bootstrap_1 . If you run into errors refer to Troubleshooting . After setup, you can access Offensity Prime via http://localhost:8080/ . You can set your initial user in the web interface. Please do not expose your installation to the Network as long as you have not set your initial user due to security reasons. Expose Offensity Prime to the Network Offensity Prime runs on localhost:8080 per default. Install nginx to expose it to local network. sudo apt-get update sudo apt-get install nginx Generate self-signed certificates, in case you need them. sudo apt-get update sudo apt-get install ssl-cert sudo make-ssl-cert generate-default-snakeoil sudo usermod --append --groups ssl-cert `id -u` ls -l /etc/ssl/certs/ssl-cert-snakeoil.pem /etc/ssl/private/ssl-cert-snakeoil.key Replace ssl_certificate and ssl_certificate_key in offensity.nginx in case you have trusted certificates. Find offensity.nginx in the prime folder (unzipped installation archive). Apply nginx configuration. cp offensity.nginx /etc/nginx/sites-available/ ln -s /etc/nginx/sites-available/offensity.nginx /etc/nginx/sites-enabled/ rm /etc/nginx/sites-enabled/default systemctl restart nginx","title":"Getting Started"},{"location":"getting_started/#getting-started","text":"","title":"Getting Started"},{"location":"getting_started/#system-requirements","text":"Ubuntu 16G RAM 4 CPU cores 300G SSD Internet access docker 20.10.0 or above (see Install Docker Engine ) docker-compose (see Install Docker Compose )","title":"System Requirements"},{"location":"getting_started/#download-and-setup","text":"curl https://sos-at-vie-1.exo.io/source-code/offensity-prime.zip --create-dirs -o ./prime/offensity-prime.zip cd prime docker-compose up -d --build The software is provided under this license . Multiple docker images will be downloaded during the setup process. It might take some time until the setup is finished (mainly depending on your internet connection). Check the setup status using docker logs prime_bootstrap_1 . If you run into errors refer to Troubleshooting . After setup, you can access Offensity Prime via http://localhost:8080/ . You can set your initial user in the web interface. Please do not expose your installation to the Network as long as you have not set your initial user due to security reasons.","title":"Download and Setup"},{"location":"getting_started/#expose-offensity-prime-to-the-network","text":"Offensity Prime runs on localhost:8080 per default. Install nginx to expose it to local network. sudo apt-get update sudo apt-get install nginx Generate self-signed certificates, in case you need them. sudo apt-get update sudo apt-get install ssl-cert sudo make-ssl-cert generate-default-snakeoil sudo usermod --append --groups ssl-cert `id -u` ls -l /etc/ssl/certs/ssl-cert-snakeoil.pem /etc/ssl/private/ssl-cert-snakeoil.key Replace ssl_certificate and ssl_certificate_key in offensity.nginx in case you have trusted certificates. Find offensity.nginx in the prime folder (unzipped installation archive). Apply nginx configuration. cp offensity.nginx /etc/nginx/sites-available/ ln -s /etc/nginx/sites-available/offensity.nginx /etc/nginx/sites-enabled/ rm /etc/nginx/sites-enabled/default systemctl restart nginx","title":"Expose Offensity Prime to the Network"},{"location":"license/","text":"Acceptance In order to get any license under these terms, you must agree to them as both strict obligations and conditions to all your licenses. Copyright License The licensor grants you a copyright license for the software limited to any permitted purpose. Noncommercial Purposes Any noncommercial use such as personal use or internal business use is a permitted purpose. Personal Uses Personal use for research, experiment, and testing for the benefit of public knowledge, personal study, private entertainment, hobby projects, amateur pursuits, or religious observance, without any anticipated commercial application, is use for a permitted purpose. Internal Business Use Use of the software for the internal business operations of you and your company is use for a permitted purpose. No Other Rights These terms do not allow you to sublicense or transfer any of your licenses to anyone else.Only licensor may grant licences, similar or other rights on the software to anyone else. These terms do not imply any other licenses. No Liability The software is provided for free. To the extent permitted by Applicable Law, the software comes as is, without any warranty or condition, and the licensor will not be liable to you for any damages arising out of these terms or the use or nature of the software. law. Applicable law and jurisdiction These license terms shall be exclusively governed by Austrian Law. It is agreed that the place of jurisdication shall exclusively be the court in Vienna with jurisdiction ratione materiae Definitions The licensor is the individual or entity offering these terms, and the software is the software the licensor makes available under these terms. You refers to the individual or entity agreeing to these terms. Your company is any legal entity, sole proprietorship, or other kind of organization that you work for, plus all organizations that have control over, are under the control of, or are under common control with that organization. Control means ownership of substantially all the assets of an entity, or the power to direct its management and policies by vote, contract, or otherwise. Control can be direct or indirect. Your licenses are all the licenses granted to you for the software under these terms. Use means anything you do with the software requiring one of your licenses.","title":"License"},{"location":"license/#acceptance","text":"In order to get any license under these terms, you must agree to them as both strict obligations and conditions to all your licenses.","title":"Acceptance"},{"location":"license/#copyright-license","text":"The licensor grants you a copyright license for the software limited to any permitted purpose.","title":"Copyright License"},{"location":"license/#noncommercial-purposes","text":"Any noncommercial use such as personal use or internal business use is a permitted purpose.","title":"Noncommercial Purposes"},{"location":"license/#personal-uses","text":"Personal use for research, experiment, and testing for the benefit of public knowledge, personal study, private entertainment, hobby projects, amateur pursuits, or religious observance, without any anticipated commercial application, is use for a permitted purpose.","title":"Personal Uses"},{"location":"license/#internal-business-use","text":"Use of the software for the internal business operations of you and your company is use for a permitted purpose.","title":"Internal Business Use"},{"location":"license/#no-other-rights","text":"These terms do not allow you to sublicense or transfer any of your licenses to anyone else.Only licensor may grant licences, similar or other rights on the software to anyone else. These terms do not imply any other licenses.","title":"No Other Rights"},{"location":"license/#no-liability","text":"The software is provided for free. To the extent permitted by Applicable Law, the software comes as is, without any warranty or condition, and the licensor will not be liable to you for any damages arising out of these terms or the use or nature of the software. law.","title":"No Liability"},{"location":"license/#applicable-law-and-jurisdiction","text":"These license terms shall be exclusively governed by Austrian Law. It is agreed that the place of jurisdication shall exclusively be the court in Vienna with jurisdiction ratione materiae","title":"Applicable law and jurisdiction"},{"location":"license/#definitions","text":"The licensor is the individual or entity offering these terms, and the software is the software the licensor makes available under these terms. You refers to the individual or entity agreeing to these terms. Your company is any legal entity, sole proprietorship, or other kind of organization that you work for, plus all organizations that have control over, are under the control of, or are under common control with that organization. Control means ownership of substantially all the assets of an entity, or the power to direct its management and policies by vote, contract, or otherwise. Control can be direct or indirect. Your licenses are all the licenses granted to you for the software under these terms. Use means anything you do with the software requiring one of your licenses.","title":"Definitions"},{"location":"troubleshooting/","text":"Troubleshooting Proxy settings You must specify your proxy server in two places: Docker daemon for pulling base-images from the docker registry see https://docs.docker.com/config/daemon/systemd/#httphttps-proxy Offensity bootstrap container for internet access of Offensity Prime add following settings to the bootstrap section of settings.yml bootstrap: environment: NO_PROXY: \".offensity\" # do not remove this line HTTP_PROXY: \"http://user:pass@proxy.example.com:3128\" HTTPS_PROXY: \"https://user:pass@proxy.example.com:3219\" Docker Hub login You might run into rate limit restrictions of Docker Hub. Login to Docker Hub to increase your rate limits. Your docker hub auth token needs to be added to settings.yml . The auth token can be acquired by issuing docker login and reading the token from ~/.docker/config.json . docker login cat ~/.docker/config.json { \"auths\": { \"https://index.docker.io/v1/\": { \"auth\": \"your_docker_auth_token\" } } } bootstrap: DOCKER_HUB_AUTH_TOKEN: your_docker_auth_token Starting and Stopping An example systemd service unit is provided in offensity.service . This service starts and stops Offensity via docker-compose. Following commands configure the systemd service: mkdir -p /opt/offensity/ cp docker-compose.yml /opt/opffensity/ cp offensity.service /etc/systemd/system/ systemctl daemon-reload systemctl start offensity.service systemctl enable offensity.service","title":"Troubleshooting"},{"location":"troubleshooting/#troubleshooting","text":"","title":"Troubleshooting"},{"location":"troubleshooting/#proxy-settings","text":"You must specify your proxy server in two places: Docker daemon for pulling base-images from the docker registry see https://docs.docker.com/config/daemon/systemd/#httphttps-proxy Offensity bootstrap container for internet access of Offensity Prime add following settings to the bootstrap section of settings.yml bootstrap: environment: NO_PROXY: \".offensity\" # do not remove this line HTTP_PROXY: \"http://user:pass@proxy.example.com:3128\" HTTPS_PROXY: \"https://user:pass@proxy.example.com:3219\"","title":"Proxy settings"},{"location":"troubleshooting/#docker-hub-login","text":"You might run into rate limit restrictions of Docker Hub. Login to Docker Hub to increase your rate limits. Your docker hub auth token needs to be added to settings.yml . The auth token can be acquired by issuing docker login and reading the token from ~/.docker/config.json . docker login cat ~/.docker/config.json { \"auths\": { \"https://index.docker.io/v1/\": { \"auth\": \"your_docker_auth_token\" } } } bootstrap: DOCKER_HUB_AUTH_TOKEN: your_docker_auth_token","title":"Docker Hub login"},{"location":"troubleshooting/#starting-and-stopping","text":"An example systemd service unit is provided in offensity.service . This service starts and stops Offensity via docker-compose. Following commands configure the systemd service: mkdir -p /opt/offensity/ cp docker-compose.yml /opt/opffensity/ cp offensity.service /etc/systemd/system/ systemctl daemon-reload systemctl start offensity.service systemctl enable offensity.service","title":"Starting and Stopping"}]}